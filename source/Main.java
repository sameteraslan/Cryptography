/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package source;

/**
 *
 * @author Samet Eraslan
 */
public class Main {

    public static void main(String[] args) {
        Porta porta = new Porta();
        
        String plaintext = "SACLARINITARIYOROTEKIYLEACIKYAKALIBEYAZFRENKGOMLEGININDUGMELERINIILIKLIYORD" +
                            "UENASILSINBAKALIMANLATDIYESORDUHICSOYLEDIMYABANARASTGELDIGINDENMEMNUNGOR" +
                            "UNUYORDUIHTIMALERISTIGIMERTEBELERIGOSTEREBILDIGINEYAHUTDABENIMHALIMIDUSUNER" +
                            "EKBENIMGIBIOLMADIGINASEVINIYORDUNEDENSEHAYATTABIRMUDDETBERABERYURUDUGUMU" +
                            "ZINSANLARINBASINABIRFELAKETGELDIGINIHERHANGIBIRSIKINTIYADUSTUKLERINIGORUNCEBU" +
                            "BELALARIKENDIBASIMIZDANSAVMISGIBIFERAHLIKDUYARVEOZAVALLILARASANKIBIZEDEGELE" +
                            "BILECEKBELALARIKENDIUSTLERINECEKTIKLERIICINALAKAVEMERHAMETGOSTERMEKISTERIZH" +
                            "AMDIDEBANAAYNIHISLERLEHITAPEDERGIBIYDIYAZIFILANYAZIYORMUSUNDEDIARASIRASIIRHI" +
                            "KAYEBIRFAYDASIOLUYORMUBARIGENEGULDUMOBIRAKBOYLESEYLERICANIMDIYEREKPRATIK" +
                            "HAYATINMUVAFFAKIYETLERINDENEDEBIYATGIBIBOSSEYLERINMEKTEPSIRALARINDANSONRAA" +
                            "NCAKZARARLIOLABILECEGINDENBAHSETTIKENDISINECEVAPVERILEBILECEGINIMUNAKASAEDIL" +
                            "EBILECEGINIASLAAKLINAGETIRMEDENKUCUKBIRCOCUGANASIHATVERIRGIBIKONUSUYORVEBU" +
                            "CESARETIHAYATTAKIMUVAFFAKIYETINDENALDIGINITAVIRLARIYLAGOSTERMEKTENDEHICCEKI" +
                            "NMIYORDUYUZUMDEPEKAHMAKCAOLDUGUNUADAMAKILLIHISSETTIGIMBIRGULUMSEMEILEHA" +
                            "YRANHAYRANONABAKIYORVEBUHALIMLEKENDISINEDAHACOKCESARETVERIYORDUMYARINSA" +
                            "BAHBANAUGRADIYORDUBAKALIMBIRSEYLERDUSUNURUZSENZEKICOCUKSUNDURBILIRIMPEKC" +
                            "ALISKANDEGILDINAMABUNUNEHEMMIYETIYOKHAYATVEZARURETLERINSANABIRCOKSEYLERO" +
                            "GRETIRUNUTMAERKENDENGELBENIGORBUNLARISOYLERKENMEKTEPTEKENDISININDEILERIGEL" +
                            "ENTEMBELLERDENOLDUGUNUTAMAMENUNUTMUSABENZIYORDUYAHUTDABUNUBURADAYUZU" +
                            "NEVURAMAYACAGIMDANEMINOLDUGUICINPERVAZSIZCAKONUSUYORDUYERINDENKALKARGIB" +
                            "IBIRHAREKETYAPTIHEMENDOGRULDUMVEELIMIUZATARAKBANAMUSAADEDEDIMNEDENCANIM" +
                            "DAHAERKENAMASENBILIRSINBENIYEMEGECAGIRDIGINIUNUTMUSTUMBUANDAHATIRLADIMFAK" +
                            "ATOTAMAMENUNUTMUSGORUNUYORDUKAPIYAKADARGELDIMSAPKAMIALIRKENHANIMEFENDI" +
                            "YEHURMETLERDEDIMOLUROLURSENYARINBANAUGRAUZULMECANIMDIYEREKSIRTIMIOKSADID" +
                            "ISARICIKTIGIMZAMANORTALIKADAMAKILLIKARARMISSOKAKLAMBALARIYANMISTIDERINBIRN" +
                            "EFESALDIMHAVABIRAZTOZLAKARISIKDAOLSABANAFEVKALADETEMIZVEFERAHLATICIGELDIAG" +
                            "IRAGIRYURUDUMERTESIGUNOGLEYEDOGRUHAMDININSIRKETINEGITTIMHALBUKIDUNAKSAMEV" +
                            "INDENCIKTIGIMSIRADABUNAHICNIYETIMYOKTUZATENSARIHBIRVAITTEDEBULUNMAMISTIBAKA" +
                            "LIMBIRSEYDUSUNURUZBIRSEYYAPARIZGIBIHERMURACAATETTIGIMHAYIRSAHIBINDENDINLEME" +
                            "YEALISTIGIMBEYLIKSOZLERLEBENIUGURLAMISTIBUNARAGMENGITTIMICIMDEBIRUMITTENZIYA" +
                            "DENEDENSEKENDIMITEZLILEDILMISGORMEKARZUSUVARDIADETANEFSIMEDUNAKSAMSESCIKA" +
                            "RMADANDINLEDINVEONUNSANAKARSIVELINIMETTAVRITAKINMASINARAZIOLDUNYAHAYDIBA" +
                            "KALIMBUNUSONUNAKADARGOTURMELISENBUNALAYIKSINDEMEKISTIYORDUMHADEMEBENIEV" +
                            "VELAKUCUKBIRODAYAALIPBEKLETTIHAMDININYANINAGIRDIGIMZAMANYUZUMDEGENEODUN" +
                            "KUAHMAKCATEBESSUMUNBULUNDUGUNUHISSETTIMVEKENDIMEDAHACOKKIZDIMHAMDIONUN" +
                            "DESERILIDURANBIRSURUKAGITVEICERIGIRIPCIKANBIRSURUMEMURLAMESGULDUBANABASIYL" +
                            "ABIRISKEMLEGOSTERDIVEISINEBAKMAKTADEVAMETTIELINISIKMAYACESARETEDEMEDENISKE" +
                            "MLEYEILISTIMSIMDIONUNKARSISINDAHAKIKATENAMIRIMHATTAVELINIMETIMMISGIBIBIRSASKI" +
                            "NLIKDUYUYORVEBUKADARALCALANBENLIGIMEBUMUAMELEYICIDDENLAYIKGORUYORDUMDU" +
                            "NAKSAMBENIYOLDAOTOMOBILINEALANMEKTEPARKADASIMLA";
                           
        String ciphertext = "MXXUPLODQKPLOBGIMAXUQCNXTZQTJTQXTRQXFXEOCXHUOFORXQQEXHWKOVTRXHQEXORSS" +
                            "UXFIHYLTHTIQUDOHYVTPROWVENTANQCTMIHYLWOVIGCNXWSUCPUTDVIPMAQZUSOZSFZTHSO" +
                            "UEFHZEJLLBFEJZFONJQVPRXHQJEOZSUNCAXYZUTLOQGJEXLOWRNWOQQETFTRMKSTUOFRONTV" +
                            "QVXWBIMETLXUWNLOSQQXXIRWVZXZODVJTCODQCMLWKFNSXHIZQPFTJLWQOLWMZSXAYZIPU" +
                            "XHDLCBWKOLOBGSFJPHRXJRLUTIQEPUOHNNNTQOLPTRWSORLONOJQPHZSWRCMOUQEEOFXYL" +
                            "DABUTNCOHSOFCBHZZXFUXVVUPLOUZESOUXKROOGNVEDTCWQJVOUSNNCTNVQTSBFXJMTIGX" +
                            "AWNROVVIPMTDSRQOGOYNVXROWRNXVOSXTRTVVIXQXDYRFMAVZIXHXZZTEOQVZIXOVSFWN" +
                            "TQXANOXLRVVTAZEKKTLSOSRDAXHQDWTSNQZTUTDVWJHORQJNXLVZQXATFZZTLZSWRJWOBV" +
                            "DXYOVVEJTGSDFCSBIMESXWSVIPMOHVJXOLRQTPFXYQIUTFNVJXIRKDFCSBYVIXZXDZPFRWKUF" +
                            "QOLXSXMFROKNJRXHQYPHOWYRJXLOSGCTASSQPFTJQEOBCXNOPQOBZKNXLSFZTHXNZXXFTJO" +
                            "RQOUEKJTFROJRLSXULNAMOHVUPLODYWLMIDJWPHVXSDPLTHTRMRTYQUTVXQQESXHYVQDX" +
                            "AJQTTHWSKRLXVOAWACXHQUTUOVZYTZODQVFHTUVJPXWSTNQOROXNVOHSVJNTTUTRLTZOL" +
                            "RCSXNZEZBVKSXXLVEXLVTHXKRWTALZIXLZSWRZIHKKLJILLZXFVXIVITAORVCPAAXSROBCXN" +
                            "OPQOBZKXHWOFWNWOQQEXATLQINTLSDUPZIILNCSXULNLWXRQYRXQSFVXFIHYLJBGKUZTJXU" +
                            "VQOTQZVFNWBQMEFTWXUWZORVQQXMMOLKXZOWWRCZBVMVDXSOQUTNTBJWLNTBJWLIHX" +
                            "WWZOFEJMTUBRVUXSROSNLWOIQETWTRVYMQVOKWCXALZIXFIHYLOFTHQEDTUXPXPHTKOIPW" +
                            "OBGISBUXSWNOSYQIDXFVZISBMKFLCBGIZEKXQSXFRBQIMESBLYQUXLOWHNZVTVQJZTHNZPXR" +
                            "WSFWOTUKFLLXNOUVXFXJQCMQNXDWECXCVIFLXJTNCOHIVEPUOHXFZMXBTNCIZHZKXLBDMK" +
                            "OTXHSNLWXDONNUXDQPMLUKFUPLOIGCNXLUZEOXQJZGEXQOFZXMODQESXOVZIXZXVZEEXSY" +
                            "ZUNXLNZEMRWKOLLBAXUWOXHKFLESBIVXTHGSDFCWBBVQFAWXWLLBUKJWSTFKELLXCKJWO" +
                            "TFXXWVOSNVETSODGUSBZKQYXHJOJMPGMSEYPQIDMJFFIHYLJXLSFZTHQXTTPLZSWRQOLRVITQ" +
                            "XJDWAAORZVTHWEOIFRWKUMTXRSURFGTJVIPQUXFWOBMXVZTWXNQVLXWOFYPHOWYWWTX" +
                            "HSNLTSXKNLUOVQIDOHYZEXFXWZPTVTQQISOZSFRFHBJULDABWWLPHWXPWEOLVVZXSYXSWE" +
                            "IAXUWOXHKFLESBIOFCBHKDFCWBUVGXFTUVZPLZOTZXSMXHTPSOXTRCQXDPWLOSONNLWOBZ" +
                            "QFLSOLUTLWOYROIRKJFNBLIZEJTLSFXPHTKOIPBGKTVTVTDQVSOFOJNZMOHLROOIUKWSOWSK" +
                            "WCOVSSKXZOWEWOTHEJKPROUVZPSTUQUNOQXJWCSOIKFZTQVVVQTRXJRJTHWQJEOWOJRLUO" +
                            "HFNUXMXTZXSNXAWQOLXEKMGRXSWCOMSSZPIRIVXPHTPZMZTRXYNEXSSEMTYXHVQNTASXR" +
                            "VXRNQWVOLXORCFBHMZFSXHLNDOZKFFVRXBZZMZLKPWOWODQEDOLUZKXHXQQKEOSRVUQB" +
                            "QSYLLTQIVVTCODYNLVOULRVOSIQIPWTYMEPNOZFRJXASUCMQAKEWEXHIVIXNUSJMPOAJZZTU" +
                            "BVMEOTSSKKXUTUVUXSUSJJTFWKKLLBLKEXXLMODCPJTHQDVOUSPNCSBHVYPTAOLKXZOWPW" +
                            "JOLIVQXUODYNLWODTNOXFOVUXMASOROUXBTRZMICTNCRXYZEXBZKJUPSOILRQBHXJWVSXD" +
                            "OREAOWQYXSWOWRCBSSLKTHGSDWSXHOYNLMXUZESOSSLNKROVZZXRSSKPMLSOSWCGBIMM" +
                            "PLWSVZTATDZODOSOYLLTQIVVDXMZQTPLSXYWLWODTNSOHLZFLBHIVEPQTHKRGXRSFROXAJV" +
                            "MCOAXSRLSTIQEPLTCQFNWBDDWWTFNQXPQTVQVQBHKKFLBHXSWSTLQGKFLSOTRDXHYMEPR" +
                            "TBQTDOHNZVTQOILRJILNMVWTWOUNQXHSZMGXRXSLRBQYQIMWTBVWNOJYZTNXAJQQPSWSF" +
                            "RLFTDQEPZOHYRVOSCVVPHFKELOWXQZETIWKFTFTNWVTRTAOWNDMBWMEQBRKFZFZBDMQX" +
                            "MMOLKXSCOSNLWOWZZPNTZGTZOGNQVWTSNQFLBHNZJTLOVQZFLTDWRCMBHMTPZOJANXVX" +
                            "HQPXLOFXRZTHYQIDBLKUNOBLVVVTMZKTZFUTDVXPMOBTWQOLSKTTSROOFDAXHYRGXOIQET" +
                            "UTUUWZATNZMPSXJLRTRODQJXQSXDWRXMXJNEXWOUNSXHSKTTSRODNXROILROMOWYRMHB" +
                            "DSWCMOIQESTNXSRZTAOFWOOLSUQPAAXANNOHSUNEOSWQJVOUSWRCMTISRLROUYLJBFEJMT" +
                            "UBUVZPLTVXWNTHYZENOZSUNQBSKVVTRXBQYXWWOFUPFOUOFCBFEJZFSWKFWZMTWWNLOF" +
                            "ETZPIAEUFQORSFNPRTDUNZAXFVIZTWXKRORT";

        
        // Soru 1
        String key1 = porta.findKey(plaintext, ciphertext);
        
        System.out.println("Bulunan 1. Anahtar: " + key1);
        // Bulunan Anahtar: M,N U,V Q,R S,T E,F M,N ciktisi verilmektedir.
        // Buradan tahmin yapilarak anahtar'in bu kombinasyonlardan herhangi 
        // biri oldugunu gorebiliriz. Ben anahari NURTEN olarak kullanacagim.
        // Yaptigimiz tahmin ile arama yaparak plaintext ile encipher yaparak
        // sonucun ciphertext'e esit olma durumunu kontrol etmeliyiz.
        
        // Soru 2
        // Random key olarak ayni uzunlukta olan ASAMET sectim.
        String encryptedText = porta.encipher(ciphertext   , "ASAMET");
        String key2 = porta.findKey(ciphertext, encryptedText);
        System.out.println("Bulunan 2. Anahtar: " + key2);
        String decryptedText = porta.decipher(encryptedText, "ASAMET");
        if (decryptedText.equals(ciphertext)) {
            System.out.println("1. kez sifreleme ile 2. kez sifrelemenin cozulmesi aynidir.");
            // System.out.println(decryptedText);
        }
        else {
            System.out.println("1. kez sifreleme ile 2. kez sifrelemenin cozulmesi farklidir.");
        }
        
        // Soru 3
        // Rastegele olusturulan Key: EPOSTA
        // Bu key ile Permutation Cipher yapilacaktir.
        PermutationCipher permutationCipher = new PermutationCipher();
        
        String encryptedPermutationCipher = permutationCipher.encrypt(ciphertext, "EPOSTA");
        // System.out.println(encryptedPermutationCipher); 
        
        
    }  
    
}
